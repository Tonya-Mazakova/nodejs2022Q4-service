services:
  app:
    container_name: app
    image: nestjs-app
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    volumes:
      - .:/src
    env_file:
      - .env
    ports:
      - ${APP_PORT}:${APP_PORT}
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - docker-network

  db:
    container_name: postgres-db
    restart: on-failure
    build:
        context: .
        dockerfile: ./src/dataSource/Dockerfile
    environment:
        POSTGRES_DB: ${POSTGRES_DB}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_HOST_AUTH_METHOD: trust
        POSTGRES_HOST: ${POSTGRES_HOST}
    ports:
        - ${DB_PORT}:${DB_PORT}
    volumes:
        - .:/docker-entrypoint-initdb.d
        - pgdata:/var/lib/postgresql/data
    networks:
        - docker-network

  dbadmin:
      image: dpage/pgadmin4
      restart: always
      ports:
        - 5050:80
      environment:
        PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
        PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      depends_on:
        - db
      networks:
        - docker-network

networks:
  docker-network:
     driver: bridge

volumes:
  pgdata:
